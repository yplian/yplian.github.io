{"title":"es6入门笔记-数值","slug":"es6入门笔记-数值","date":"2017-07-08T16:00:00.000Z","updated":"2017-07-08T16:00:00.000Z","comments":true,"path":"api/articles/es6入门笔记-数值.json","excerpt":"es6中改进的数值，新增方法。<br>","covers":null,"content":"<p>es6中改进的数值，新增方法。<br><a id=\"more\"></a></p>\n<p>回顾es5之前进制转换，通过toSting和parseInt的方式。<a href=\"/2017/01/08/进制转换/\">点击跳转</a></p>\n<h2 id=\"二进制与八进制\"><a href=\"#二进制与八进制\" class=\"headerlink\" title=\"二进制与八进制\"></a>二进制与八进制</h2><p>ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0b111110111</span> === <span class=\"number\">503</span> <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"number\">0o767</span> === <span class=\"number\">503</span> <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-isFinite-Number-isNaN-Number-isInteger\"><a href=\"#Number-isFinite-Number-isNaN-Number-isInteger\" class=\"headerlink\" title=\"Number.isFinite(), Number.isNaN(),Number.isInteger()\"></a>Number.isFinite(), Number.isNaN(),Number.isInteger()</h2><p><code>Number.isFinite()</code>：判断数值是否为有限的(finite)。<br><code>Number.isNaN()</code>：判断数值是否是NaN。<br><code>Number.isInteger()</code>：判断数值是否是整数。</p>\n<p>与传统的方法不同，不会先调用<code>Number()</code>转换为数值后再进行判断，而是直接判断，不是number类型的直接返回<code>false</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"number\">10</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">NaN</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">Infinity</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(-<span class=\"literal\">Infinity</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"string\">'foo'</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"string\">'10'</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">true</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"literal\">NaN</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"number\">10</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'10'</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"literal\">true</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"number\">9</span>/<span class=\"literal\">NaN</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'true'</span>/<span class=\"number\">0</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'true'</span>/<span class=\"string\">'true'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25.0</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25.1</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"string\">\"15\"</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"literal\">true</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-parseInt-Number-parseFloat\"><a href=\"#Number-parseInt-Number-parseFloat\" class=\"headerlink\" title=\"Number.parseInt(), Number.parseFloat()\"></a>Number.parseInt(), Number.parseFloat()</h2><p>整合全局方法到Number对象上，行为保持不变。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5的写法</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">'12.34'</span>) <span class=\"comment\">// 12</span></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">'123.45#'</span>) <span class=\"comment\">// 123.45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6的写法</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.parseInt(<span class=\"string\">'12.34'</span>) <span class=\"comment\">// 12</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.parseFloat(<span class=\"string\">'123.45#'</span>) <span class=\"comment\">// 123.45</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-EPSILON\"><a href=\"#Number-EPSILON\" class=\"headerlink\" title=\"Number.EPSILON\"></a>Number.EPSILON</h2><p>Number.EPSILON 属性表示 1 和大于 1 的最小值（可表示为 Number）的差值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">y = <span class=\"number\">0.2</span>;</span><br><span class=\"line\">z = <span class=\"number\">0.3</span>;</span><br><span class=\"line\">equal = (<span class=\"built_in\">Math</span>.abs(x + y - z) &lt; <span class=\"built_in\">Number</span>.EPSILON); <span class=\"comment\">//true</span></span><br><span class=\"line\">x+y == z <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-isSafeInteger\"><a href=\"#Number-isSafeInteger\" class=\"headerlink\" title=\"Number.isSafeInteger()\"></a>Number.isSafeInteger()</h2><p>JavaScript 能够准确表示的整数范围在-2^53到2^53之间（不含两个端点），超过这个范围，无法精确表示这个值。<code>Number.isSafeInteger()</code>用来判断是否在该数值范围内。</p>\n<h2 id=\"Math扩展\"><a href=\"#Math扩展\" class=\"headerlink\" title=\"Math扩展\"></a>Math扩展</h2><ul>\n<li>Math.trunc方法用于去除一个数的小数部分，返回整数部分。非数值默认先调用Number转换。</li>\n<li>Math.sign方法的返回值判断一个数到底是正数(+1)、负数(-1)、还是零(0 -0),其他值(NaN)。非数值默认先调用Number转换。</li>\n<li>Math.cbrt方法用于计算一个数的立方根。</li>\n<li>Math.clz32方法返回一个数的 32 位无符号整数形式有多少个前导 0。</li>\n<li>Math.imul方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。</li>\n<li>Math.fround 方法返回一个数的单精度浮点数形式。</li>\n<li><p>Math.hypot方法返回所有参数的平方和的平方根。</p>\n</li>\n<li><p>Math.expm1(x)返回 ex - 1，即Math.exp(x) - 1。</p>\n</li>\n<li>Math.log1p(x)方法返回1 + x的自然对数，即Math.log(1 + x)。如果x小于-1，返回NaN。</li>\n<li>Math.log10(x)返回以 10 为底的x的对数。如果x小于 0，则返回 NaN。</li>\n<li><p>Math.log2(x)返回以 2 为底的x的对数。如果x小于 0，则返回 NaN。</p>\n</li>\n<li><p>Math.sinh(x) 返回x的双曲正弦（hyperbolic sine）</p>\n</li>\n<li>Math.cosh(x) 返回x的双曲余弦（hyperbolic cosine）</li>\n<li>Math.tanh(x) 返回x的双曲正切（hyperbolic tangent）</li>\n<li>Math.asinh(x) 返回x的反双曲正弦（inverse hyperbolic sine）</li>\n<li>Math.acosh(x) 返回x的反双曲余弦（inverse hyperbolic cosine）</li>\n<li><p>Math.atanh(x) 返回x的反双曲正切（inverse hyperbolic tangent）</p>\n</li>\n<li><p>Math.sign()用来判断一个值的正负，但是如果参数是-0，它会返回-0。</p>\n</li>\n</ul>\n<h2 id=\"指数运算符\"><a href=\"#指数运算符\" class=\"headerlink\" title=\"指数运算符\"></a>指数运算符</h2><p>ES2016 新增了一个指数运算符（**）。相当于Math.pow(base,exponent)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span> ** <span class=\"number\">2</span> <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"number\">2</span> ** <span class=\"number\">3</span> <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1.5</span>;</span><br><span class=\"line\">a **= <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">// 等同于 a = a * a;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">4</span>;</span><br><span class=\"line\">b **= <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">// 等同于 b = b * b * b;</span></span><br></pre></td></tr></table></figure>\n<p>参考链接<br><a href=\"http://es6.ruanyifeng.com/#docs/number\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/number</a></p>\n","more":"</p>\n<p>回顾es5之前进制转换，通过toSting和parseInt的方式。<a href=\"/2017/01/08/进制转换/\">点击跳转</a></p>\n<h2 id=\"二进制与八进制\"><a href=\"#二进制与八进制\" class=\"headerlink\" title=\"二进制与八进制\"></a>二进制与八进制</h2><p>ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0b111110111</span> === <span class=\"number\">503</span> <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"number\">0o767</span> === <span class=\"number\">503</span> <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-isFinite-Number-isNaN-Number-isInteger\"><a href=\"#Number-isFinite-Number-isNaN-Number-isInteger\" class=\"headerlink\" title=\"Number.isFinite(), Number.isNaN(),Number.isInteger()\"></a>Number.isFinite(), Number.isNaN(),Number.isInteger()</h2><p><code>Number.isFinite()</code>：判断数值是否为有限的(finite)。<br><code>Number.isNaN()</code>：判断数值是否是NaN。<br><code>Number.isInteger()</code>：判断数值是否是整数。</p>\n<p>与传统的方法不同，不会先调用<code>Number()</code>转换为数值后再进行判断，而是直接判断，不是number类型的直接返回<code>false</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"number\">10</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">NaN</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">Infinity</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(-<span class=\"literal\">Infinity</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"string\">'foo'</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"string\">'10'</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isFinite(<span class=\"literal\">true</span>); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"literal\">NaN</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"number\">10</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'10'</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"literal\">true</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"number\">9</span>/<span class=\"literal\">NaN</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'true'</span>/<span class=\"number\">0</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isNaN(<span class=\"string\">'true'</span>/<span class=\"string\">'true'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25.0</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"number\">25.1</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"string\">\"15\"</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.isInteger(<span class=\"literal\">true</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-parseInt-Number-parseFloat\"><a href=\"#Number-parseInt-Number-parseFloat\" class=\"headerlink\" title=\"Number.parseInt(), Number.parseFloat()\"></a>Number.parseInt(), Number.parseFloat()</h2><p>整合全局方法到Number对象上，行为保持不变。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5的写法</span></span><br><span class=\"line\"><span class=\"built_in\">parseInt</span>(<span class=\"string\">'12.34'</span>) <span class=\"comment\">// 12</span></span><br><span class=\"line\"><span class=\"built_in\">parseFloat</span>(<span class=\"string\">'123.45#'</span>) <span class=\"comment\">// 123.45</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6的写法</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.parseInt(<span class=\"string\">'12.34'</span>) <span class=\"comment\">// 12</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span>.parseFloat(<span class=\"string\">'123.45#'</span>) <span class=\"comment\">// 123.45</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-EPSILON\"><a href=\"#Number-EPSILON\" class=\"headerlink\" title=\"Number.EPSILON\"></a>Number.EPSILON</h2><p>Number.EPSILON 属性表示 1 和大于 1 的最小值（可表示为 Number）的差值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">y = <span class=\"number\">0.2</span>;</span><br><span class=\"line\">z = <span class=\"number\">0.3</span>;</span><br><span class=\"line\">equal = (<span class=\"built_in\">Math</span>.abs(x + y - z) &lt; <span class=\"built_in\">Number</span>.EPSILON); <span class=\"comment\">//true</span></span><br><span class=\"line\">x+y == z <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Number-isSafeInteger\"><a href=\"#Number-isSafeInteger\" class=\"headerlink\" title=\"Number.isSafeInteger()\"></a>Number.isSafeInteger()</h2><p>JavaScript 能够准确表示的整数范围在-2^53到2^53之间（不含两个端点），超过这个范围，无法精确表示这个值。<code>Number.isSafeInteger()</code>用来判断是否在该数值范围内。</p>\n<h2 id=\"Math扩展\"><a href=\"#Math扩展\" class=\"headerlink\" title=\"Math扩展\"></a>Math扩展</h2><ul>\n<li>Math.trunc方法用于去除一个数的小数部分，返回整数部分。非数值默认先调用Number转换。</li>\n<li>Math.sign方法的返回值判断一个数到底是正数(+1)、负数(-1)、还是零(0 -0),其他值(NaN)。非数值默认先调用Number转换。</li>\n<li>Math.cbrt方法用于计算一个数的立方根。</li>\n<li>Math.clz32方法返回一个数的 32 位无符号整数形式有多少个前导 0。</li>\n<li>Math.imul方法返回两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数。</li>\n<li>Math.fround 方法返回一个数的单精度浮点数形式。</li>\n<li><p>Math.hypot方法返回所有参数的平方和的平方根。</p>\n</li>\n<li><p>Math.expm1(x)返回 ex - 1，即Math.exp(x) - 1。</p>\n</li>\n<li>Math.log1p(x)方法返回1 + x的自然对数，即Math.log(1 + x)。如果x小于-1，返回NaN。</li>\n<li>Math.log10(x)返回以 10 为底的x的对数。如果x小于 0，则返回 NaN。</li>\n<li><p>Math.log2(x)返回以 2 为底的x的对数。如果x小于 0，则返回 NaN。</p>\n</li>\n<li><p>Math.sinh(x) 返回x的双曲正弦（hyperbolic sine）</p>\n</li>\n<li>Math.cosh(x) 返回x的双曲余弦（hyperbolic cosine）</li>\n<li>Math.tanh(x) 返回x的双曲正切（hyperbolic tangent）</li>\n<li>Math.asinh(x) 返回x的反双曲正弦（inverse hyperbolic sine）</li>\n<li>Math.acosh(x) 返回x的反双曲余弦（inverse hyperbolic cosine）</li>\n<li><p>Math.atanh(x) 返回x的反双曲正切（inverse hyperbolic tangent）</p>\n</li>\n<li><p>Math.sign()用来判断一个值的正负，但是如果参数是-0，它会返回-0。</p>\n</li>\n</ul>\n<h2 id=\"指数运算符\"><a href=\"#指数运算符\" class=\"headerlink\" title=\"指数运算符\"></a>指数运算符</h2><p>ES2016 新增了一个指数运算符（**）。相当于Math.pow(base,exponent)。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span> ** <span class=\"number\">2</span> <span class=\"comment\">// 4</span></span><br><span class=\"line\"><span class=\"number\">2</span> ** <span class=\"number\">3</span> <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1.5</span>;</span><br><span class=\"line\">a **= <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">// 等同于 a = a * a;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">4</span>;</span><br><span class=\"line\">b **= <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"comment\">// 等同于 b = b * b * b;</span></span><br></pre></td></tr></table></figure>\n<p>参考链接<br><a href=\"http://es6.ruanyifeng.com/#docs/number\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/#docs/number</a></p>","categories":[{"name":"js","path":"api/categories/js.json"}],"tags":[{"name":"es6","path":"api/tags/es6.json"},{"name":"笔记","path":"api/tags/笔记.json"},{"name":"Number","path":"api/tags/Number.json"}]}