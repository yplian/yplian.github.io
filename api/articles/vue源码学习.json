{"title":"vue源码学习","slug":"vue源码学习","date":"2020-03-01T07:02:45.000Z","updated":"2020-03-01T07:02:45.000Z","comments":true,"path":"api/articles/vue源码学习.json","excerpt":"随着vue3.x的正式版推出，再加上长时间的使用vue，本着对本质的追求，学习总结一下源码的学习。考虑到3.x的相关环境还不是很稳定，未来一段时间，大多数时候用的应该还是2.x，先从2.x版本源码学习，相对网上参考资料也多。总结结合知识汇总下。本篇主要关于对vue源码的简单认识，主要是前期的准备工作。<br>","covers":null,"content":"<p>随着vue3.x的正式版推出，再加上长时间的使用vue，本着对本质的追求，学习总结一下源码的学习。考虑到3.x的相关环境还不是很稳定，未来一段时间，大多数时候用的应该还是2.x，先从2.x版本源码学习，相对网上参考资料也多。总结结合知识汇总下。</p>\n<p>本篇主要关于对vue源码的简单认识，主要是前期的准备工作。<br><a id=\"more\"></a></p>\n<h2 id=\"Flow\"><a href=\"#Flow\" class=\"headerlink\" title=\"Flow\"></a>Flow</h2><p><a href=\"https://flow.org/en/docs/getting-started/\" target=\"_blank\" rel=\"noopener\">Flow</a> 是 facebook 出品的 JavaScript 静态类型检查工具。Vue.js 的源码利用了 Flow 做了静态类型检查，所以了解 Flow 有助于我们阅读源码。</p>\n<p><em>类似的还有<a href=\"http://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">TypeScript</a>,这里推荐下<a href=\"https://ts.xcatliu.com/\" target=\"_blank\" rel=\"noopener\">https://ts.xcatliu.com/</a>，相对官网文档，更容易学习TS</em></p>\n<h3 id=\"类型检测\"><a href=\"#类型检测\" class=\"headerlink\" title=\"类型检测\"></a>类型检测</h3><p>类型检测的优点是有目共睹的，对于js其灵活性既是优点也有缺陷，过于灵活的副作用是很容易就写出非常隐蔽的隐患代码，在编译期甚至看上去都不会报错，但在运行阶段就可能出现各种奇怪的 bug。</p>\n<blockquote>\n<p>类型检查，就是在编译期尽早发现（由类型错误引起的）bug，又不影响代码运行（不需要运行时动态检查类型），使编写 JavaScript 具有和编写 Java 等强类型语言相近的体验。</p>\n</blockquote>\n<h3 id=\"为什么用flow\"><a href=\"#为什么用flow\" class=\"headerlink\" title=\"为什么用flow\"></a>为什么用flow</h3><p>Vue.js 在做 2.0 重构的时候，在 ES2015 的基础上，除了 ESLint 保证代码风格之外，也引入了 Flow 做静态类型检查。之所以选择 Flow，主要是因为 Babel 和 ESLint 都有对应的 Flow 插件以支持语法，可以完全沿用现有的构建配置，非常小成本的改动就可以拥有静态类型检查的能力。</p>\n<p><em>备注：这里个人推荐多人协作使用ts，个人或者需要类型检测可灵活配置时使用flow。</em></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>这个简单写一下相关语法，熟悉ts或者后台语言，很容易理解这方面的知识。具体没提到的推荐在官网查看。</p>\n<h4 id=\"工作方式\"><a href=\"#工作方式\" class=\"headerlink\" title=\"工作方式\"></a>工作方式</h4><ul>\n<li>类型推断：通过变量的使用上下文来推断出变量类型，然后根据这些推断来检查类型。</li>\n<li>类型注释：事先注释好我们期待的类型，Flow 会基于这些注释来判断。</li>\n</ul>\n<h5 id=\"类型推断\"><a href=\"#类型推断\" class=\"headerlink\" title=\"类型推断\"></a>类型推断</h5><p>不需要任何代码修改即可进行类型检查，最小化开发者的工作量。它不会强制你改变开发习惯，因为它会自动推断出变量的类型。这就是所谓的类型推断，Flow 最重要的特性之一。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*@flow*/</span>    <span class=\"comment\">//有这个注释定义时，flow才会去识别</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">split</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.split(<span class=\"string\">' '</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">split(<span class=\"number\">11</span>) <span class=\"comment\">//报错，提示不是字符串类型</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"类型注释\"><a href=\"#类型注释\" class=\"headerlink\" title=\"类型注释\"></a>类型注释</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*@flow*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x: number, y: number</span>): <span class=\"title\">number</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"string\">'Hello'</span>, <span class=\"number\">11</span>) <span class=\"comment\">// x，y都应为num，报错提示类型错误</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组 Array&lt;T&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr: <span class=\"built_in\">Array</span>&lt;number&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">arr.push(<span class=\"string\">'Hello'</span>) <span class=\"comment\">// 报错，arr定义了数组类型应为number</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类和对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bar</span> </span>&#123;</span><br><span class=\"line\">  x: string;           <span class=\"comment\">// x 是字符串</span></span><br><span class=\"line\">  y: string | number;  <span class=\"comment\">// y 可以是字符串或者数字</span></span><br><span class=\"line\">  z: boolean;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(x: string, y: string | number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.z = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar: Bar = <span class=\"keyword\">new</span> Bar(<span class=\"string\">'hello'</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj: &#123; <span class=\"attr\">a</span>: string, <span class=\"attr\">b</span>: number, <span class=\"attr\">c</span>: <span class=\"built_in\">Array</span>&lt;string&gt;, <span class=\"attr\">d</span>: Bar &#125; = &#123;</span><br><span class=\"line\">  a: <span class=\"string\">'hello'</span>,</span><br><span class=\"line\">  b: <span class=\"number\">11</span>,</span><br><span class=\"line\">  c: [<span class=\"string\">'hello'</span>, <span class=\"string\">'world'</span>],</span><br><span class=\"line\">  d: <span class=\"keyword\">new</span> Bar(<span class=\"string\">'hello'</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// null 若想任意类型 T 可以为 null 或者 undefined，只需类似如下写成 ?T 的格式即可</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo: ?string = <span class=\"literal\">null</span>  <span class=\"comment\">// foo可以时string也可以时null</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"vue源码中的flow\"><a href=\"#vue源码中的flow\" class=\"headerlink\" title=\"vue源码中的flow\"></a>vue源码中的flow</h3><p>想引用第三方库，或者自定义一些类型，但 Flow 并不认识，因此检查的时候会报错。为了解决这类问题，Flow 提出了一个 libdef 的概念，可以用来识别这些第三方库或者是自定义类型，而 Vue.js 也利用了这一特性。</p>\n<p>在 Vue.js 的主目录下有 .flowconfig 文件， 它是 Flow 的配置文件，感兴趣的同学可以看官方文档。这其中的 [libs] 部分用来描述包含指定库定义的目<br>录，默认是名为 flow-typed 的目录。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flow</span><br><span class=\"line\">├── compiler.js        # 编译相关</span><br><span class=\"line\">├── component.js       # 组件数据结构</span><br><span class=\"line\">├── global-api.js      # Global API 结构</span><br><span class=\"line\">├── modules.js         # 第三方库定义</span><br><span class=\"line\">├── options.js         # 选项相关</span><br><span class=\"line\">├── ssr.js             # 服务端渲染相关</span><br><span class=\"line\">├── vnode.js           # 虚拟 node 相关</span><br><span class=\"line\">├── weex.js            # weex框架 相关</span><br></pre></td></tr></table></figure>\n<p><em>关于weex，推荐官网<a href=\"https://weex.apache.org/zh/guide/introduction.html\" target=\"_blank\" rel=\"noopener\">https://weex.apache.org/zh/guide/introduction.html</a>，简单来讲就是一套代码多个平台。</em></p>\n<h2 id=\"vue源码目录\"><a href=\"#vue源码目录\" class=\"headerlink\" title=\"vue源码目录\"></a>vue源码目录</h2><p>主代码在src目录下，简单结构如下。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">├── compiler        # 编译相关</span><br><span class=\"line\">├── core            # 核心代码</span><br><span class=\"line\">├── platforms       # 不同平台的支持</span><br><span class=\"line\">├── server          # 服务端渲染</span><br><span class=\"line\">├── sfc             # .vue 文件解析</span><br><span class=\"line\">├── shared          # 共享代码</span><br></pre></td></tr></table></figure>\n<h3 id=\"compiler\"><a href=\"#compiler\" class=\"headerlink\" title=\"compiler\"></a>compiler</h3><p>compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。</p>\n<p>编译的工作可以在构建时做（借助 webpack、vue-loader 等辅助插件）；也可以在运行时做，使用包含构建功能的 Vue.js。显然，编译是一项耗性能的工作，所以更推荐前者——离线编译。</p>\n<h3 id=\"core\"><a href=\"#core\" class=\"headerlink\" title=\"core\"></a>core</h3><p>core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。</p>\n<h3 id=\"platforms\"><a href=\"#platforms\" class=\"headerlink\" title=\"platforms\"></a>platforms</h3><p>Vue.js 是一个跨平台的 MVVM 框架，它可以跑在 web 上，也可以配合 weex 跑在 native 客户端上。platform 是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。</p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><p>Vue.js 2.0 支持了服务端渲染，所有服务端渲染相关的逻辑都在这个目录下。注意：这部分代码是跑在服务端的 Node.js</p>\n<p>服务端渲染主要的工作是把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将静态标记”混合”为客户端上完全交互的应用程序。</p>\n<h3 id=\"sfc\"><a href=\"#sfc\" class=\"headerlink\" title=\"sfc\"></a>sfc</h3><p>通常我们开发 Vue.js 都会借助 webpack 构建， 然后通过 .vue 单文件来编写组件。这个目录下的代码逻辑会把 .vue 文件内容解析成一个 JavaScript 的对象。</p>\n<h3 id=\"shared\"><a href=\"#shared\" class=\"headerlink\" title=\"shared\"></a>shared</h3><p>Vue.js 会定义一些工具方法，这里定义的工具方法都是会被浏览器端的 Vue.js 和服务端的 Vue.js 所共享的。</p>\n<h2 id=\"源码构建\"><a href=\"#源码构建\" class=\"headerlink\" title=\"源码构建\"></a>源码构建</h2><p>Vue.js 源码是基于 <a href=\"https://github.com/rollup/rollup\" target=\"_blank\" rel=\"noopener\">Rollup</a> 构建的，它的构建相关配置都在 scripts 目录下。</p>\n<h3 id=\"构建脚本\"><a href=\"#构建脚本\" class=\"headerlink\" title=\"构建脚本\"></a>构建脚本</h3><p>基于 NPM 托管的项目都会有一个 package.json 文件。总共有 3 条命令，作用都是构建 Vue.js，后面 2 条是在第一条命令的基础上，添加一些环境参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"script\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node scripts/build.js\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build:ssr\"</span>: <span class=\"string\">\"npm run build -- web-runtime-cjs,web-server-renderer\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build:weex\"</span>: <span class=\"string\">\"npm run build -- weex\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建过程\"><a href=\"#构建过程\" class=\"headerlink\" title=\"构建过程\"></a>构建过程</h3><p>构建的入口 JS 文件，在 scripts/build.js 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> builds = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>).getAllBuilds()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// filter builds via command line arg</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (process.argv[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> filters = process.argv[<span class=\"number\">2</span>].split(<span class=\"string\">','</span>)</span><br><span class=\"line\">  builds = builds.filter(<span class=\"function\"><span class=\"params\">b</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> filters.some(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> b.output.file.indexOf(f) &gt; <span class=\"number\">-1</span> || b._name.indexOf(f) &gt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// filter out weex builds by default</span></span><br><span class=\"line\">  builds = builds.filter(<span class=\"function\"><span class=\"params\">b</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b.output.file.indexOf(<span class=\"string\">'weex'</span>) === <span class=\"number\">-1</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">build(builds)</span><br></pre></td></tr></table></figure>\n<p>配置文件，在 scripts/config.js 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> builds = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Runtime only (CommonJS). Used by bundlers e.g. Webpack &amp; Browserify</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-cjs'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.common.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'cjs'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler CommonJS build (CommonJS)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-cjs'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.common.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'cjs'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime only (ES Modules). Used by bundlers that support ES Modules,</span></span><br><span class=\"line\">  <span class=\"comment\">// e.g. Rollup &amp; Webpack 2</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-esm'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.esm.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'es'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler CommonJS build (ES Modules)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-esm'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.esm.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'es'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// runtime-only build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-dev'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// runtime-only production build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-prod'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.min.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler development build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-dev'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler production build  (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-prod'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.min.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>entry</code> 属性表示构建的入口 JS 文件地址，<code>dest</code> 属性表示构建后的 JS 文件地址。<code>format</code> 属性表示构建的格式，<code>cjs</code> 表示构建出来的文件遵循 <a href=\"http://wiki.commonjs.org/wiki/Modules/1.1\" target=\"_blank\" rel=\"noopener\">CommonJS</a> 规范，<code>es</code> 表示构建出来的文件遵循 <a href=\"http://exploringjs.com/es6/ch_modules.html\" target=\"_blank\" rel=\"noopener\">ES Module</a> 规范。 <code>umd</code> 表示构建出来的文件遵循 <a href=\"https://github.com/umdjs/umd\" target=\"_blank\" rel=\"noopener\">UMD</a> 规范。</p>\n<p>主要使用web端，以 <code>web-runtime-cjs</code> 配置为例，它的 <code>entry</code> 是 <code>resolve(&#39;web/entry-runtime.js&#39;)</code> 下面是 <code>resolve</code> 函数的定义。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 源码目录：scripts/config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> aliases = <span class=\"built_in\">require</span>(<span class=\"string\">'./alias'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> resolve = <span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = p.split(<span class=\"string\">'/'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (aliases[base]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.resolve(aliases[base], p.slice(base.length + <span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.resolve(__dirname, <span class=\"string\">'../'</span>, p)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先把 <code>resolve</code> 函数传入的参数 <code>p</code> 通过 / 做了分割成数组，然后取数组第一个元素设置为 <code>base</code>。在我们这个例子中，参数 <code>p</code> 是 <code>web/entry-runtime.js</code>，那么 <code>base</code> 则为 <code>web</code>。<code>base</code> 并不是实际的路径，它的真实路径借助了别名的配置，我们来看一下别名配置的代码，在 <code>scripts/alias</code> 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  vue: path.resolve(__dirname, <span class=\"string\">'../src/platforms/web/entry-runtime-with-compiler'</span>),</span><br><span class=\"line\">  compiler: path.resolve(__dirname, <span class=\"string\">'../src/compiler'</span>),</span><br><span class=\"line\">  core: path.resolve(__dirname, <span class=\"string\">'../src/core'</span>),</span><br><span class=\"line\">  shared: path.resolve(__dirname, <span class=\"string\">'../src/shared'</span>),</span><br><span class=\"line\">  web: path.resolve(__dirname, <span class=\"string\">'../src/platforms/web'</span>),</span><br><span class=\"line\">  weex: path.resolve(__dirname, <span class=\"string\">'../src/platforms/weex'</span>),</span><br><span class=\"line\">  server: path.resolve(__dirname, <span class=\"string\">'../src/server'</span>),</span><br><span class=\"line\">  entries: path.resolve(__dirname, <span class=\"string\">'../src/entries'</span>),</span><br><span class=\"line\">  sfc: path.resolve(__dirname, <span class=\"string\">'../src/sfc'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里 <code>web</code> 对应的真实的路径是 <code>path.resolve(__dirname, &#39;../src/platforms/web&#39;)</code>，这个路径就找到了 <code>Vue.js</code> 源码的 <code>web</code> 目录。然后 <code>resolve</code> 函数通过 <code>path.resolve(aliases[base]</code>, <code>p.slice(base.length + 1))</code> 找到了最终路径，它就是 <code>Vue.js</code> 源码 <code>web</code> 目录下的 <code>entry-runtime.js</code>。因此，<code>web-runtime-cjs</code> 配置对应的入口文件就找到了。</p>\n<p>它经过 <code>Rollup</code> 的构建打包后，最终会在 <code>dist</code> 目录下生成 <code>vue.runtime.common.js</code></p>\n<h3 id=\"关于Runtime-Only-OR-Runtime-Compiler\"><a href=\"#关于Runtime-Only-OR-Runtime-Compiler\" class=\"headerlink\" title=\"关于Runtime Only OR Runtime + Compiler\"></a>关于Runtime Only OR Runtime + Compiler</h3><ul>\n<li>Runtime Only</li>\n</ul>\n<p>通常需要借助如 webpack 的 vue-loader 工具把 .vue 文件编译成 JavaScript，因为是在编译阶段做的，所以它只包含运行时的 Vue.js 代码，因此代码体积也会更轻量。</p>\n<ul>\n<li>Runtime + Compiler</li>\n</ul>\n<p>没有对代码做预编译，但又使用了 Vue 的 template 属性并传入一个字符串，则需要在客户端编译模板，如下所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 需要编译器的版本</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div&gt;&#123;&#123; hi &#125;&#125;&lt;/div&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render (h) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> h(<span class=\"string\">'div'</span>, <span class=\"keyword\">this</span>.hi)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>在 Vue.js 2.0 中，最终渲染都是通过 render 函数。</p>\n<h2 id=\"入口\"><a href=\"#入口\" class=\"headerlink\" title=\"入口\"></a>入口</h2><p>在 web 应用下，<code>Runtime + Compiler</code> 构建出来的 <code>Vue.js</code>，它的入口是 <code>src/platforms/web/entry-runtime-with-compiler.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* @flow */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'core/config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn, cached &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mark, measure &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/perf'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'./runtime/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; query &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./util/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; compileToFunctions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./compiler/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; shouldDecodeNewlines, shouldDecodeNewlinesForHref &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./util/compat'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> idToTemplate = cached(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> el = query(id)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el &amp;&amp; el.innerHTML</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mount = Vue.prototype.$mount</span><br><span class=\"line\">Vue.prototype.$mount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  el?: string | Element,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  hydrating?: boolean</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>): <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  el = el &amp;&amp; query(el)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el === <span class=\"built_in\">document</span>.body || el === <span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">    process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; warn(</span><br><span class=\"line\">      <span class=\"string\">`Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.`</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = <span class=\"keyword\">this</span>.$options</span><br><span class=\"line\">  <span class=\"comment\">// resolve template/el and convert to render function</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!options.render) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> template = options.template</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> template === <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (template.charAt(<span class=\"number\">0</span>) === <span class=\"string\">'#'</span>) &#123;</span><br><span class=\"line\">          template = idToTemplate(template)</span><br><span class=\"line\">          <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; !template) &#123;</span><br><span class=\"line\">            warn(</span><br><span class=\"line\">              <span class=\"string\">`Template element not found or is empty: <span class=\"subst\">$&#123;options.template&#125;</span>`</span>,</span><br><span class=\"line\">              <span class=\"keyword\">this</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (template.nodeType) &#123;</span><br><span class=\"line\">        template = template.innerHTML</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">          warn(<span class=\"string\">'invalid template option:'</span> + template, <span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (el) &#123;</span><br><span class=\"line\">      template = getOuterHTML(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; config.performance &amp;&amp; mark) &#123;</span><br><span class=\"line\">        mark(<span class=\"string\">'compile'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; render, staticRenderFns &#125; = compileToFunctions(template, &#123;</span><br><span class=\"line\">        shouldDecodeNewlines,</span><br><span class=\"line\">        shouldDecodeNewlinesForHref,</span><br><span class=\"line\">        delimiters: options.delimiters,</span><br><span class=\"line\">        comments: options.comments</span><br><span class=\"line\">      &#125;, <span class=\"keyword\">this</span>)</span><br><span class=\"line\">      options.render = render</span><br><span class=\"line\">      options.staticRenderFns = staticRenderFns</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; config.performance &amp;&amp; mark) &#123;</span><br><span class=\"line\">        mark(<span class=\"string\">'compile end'</span>)</span><br><span class=\"line\">        measure(<span class=\"string\">`vue <span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span> compile`</span>, <span class=\"string\">'compile'</span>, <span class=\"string\">'compile end'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> mount.call(<span class=\"keyword\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Get outerHTML of elements, taking care</span></span><br><span class=\"line\"><span class=\"comment\"> * of SVG elements in IE as well.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getOuterHTML</span> (<span class=\"params\">el: Element</span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el.outerHTML) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> el.outerHTML</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>)</span><br><span class=\"line\">    container.appendChild(el.cloneNode(<span class=\"literal\">true</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> container.innerHTML</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.compile = compileToFunctions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>通过<code>import Vue from &#39;./runtime/index&#39;</code>,它定义在 <code>src/platforms/web/runtime/index.js</code> 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'core/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'core/config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; extend, noop &#125; <span class=\"keyword\">from</span> <span class=\"string\">'shared/util'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mountComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/instance/lifecycle'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; devtools, inBrowser, isChrome &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  query,</span><br><span class=\"line\">  mustUseProp,</span><br><span class=\"line\">  isReservedTag,</span><br><span class=\"line\">  isReservedAttr,</span><br><span class=\"line\">  getTagNamespace,</span><br><span class=\"line\">  isUnknownElement</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">'web/util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; patch &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./patch'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> platformDirectives <span class=\"keyword\">from</span> <span class=\"string\">'./directives/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> platformComponents <span class=\"keyword\">from</span> <span class=\"string\">'./components/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform specific utils</span></span><br><span class=\"line\">Vue.config.mustUseProp = mustUseProp</span><br><span class=\"line\">Vue.config.isReservedTag = isReservedTag</span><br><span class=\"line\">Vue.config.isReservedAttr = isReservedAttr</span><br><span class=\"line\">Vue.config.getTagNamespace = getTagNamespace</span><br><span class=\"line\">Vue.config.isUnknownElement = isUnknownElement</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform runtime directives &amp; components</span></span><br><span class=\"line\">extend(Vue.options.directives, platformDirectives)</span><br><span class=\"line\">extend(Vue.options.components, platformComponents)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform patch function</span></span><br><span class=\"line\">Vue.prototype.__patch__ = inBrowser ? patch : noop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// public mount method</span></span><br><span class=\"line\">Vue.prototype.$mount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  el?: string | Element,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  hydrating?: boolean</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>): <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  el = el &amp;&amp; inBrowser ? query(el) : <span class=\"literal\">undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> mountComponent(<span class=\"keyword\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>通过<code>import Vue from &#39;core/index&#39;</code>,在 <code>src/core/index.js 中</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'./instance/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initGlobalAPI &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./global-api/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isServerRendering &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/env'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; FunctionalRenderContext &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/vdom/create-functional-component'</span></span><br><span class=\"line\"></span><br><span class=\"line\">initGlobalAPI(Vue)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">'$isServer'</span>, &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: isServerRendering</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(Vue.prototype, '$ssrContext', &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> () &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore next */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$vnode &amp;&amp; <span class=\"keyword\">this</span>.$vnode.ssrContext</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// expose FunctionalRenderContext for ssr runtime helper installation</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Vue, <span class=\"string\">'FunctionalRenderContext'</span>, &#123;</span><br><span class=\"line\">  value: FunctionalRenderContext</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.version = <span class=\"string\">'__VERSION__'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue定义\"><a href=\"#vue定义\" class=\"headerlink\" title=\"vue定义\"></a>vue定义</h3><p>通过<code>import Vue from &#39;./instance/index&#39;</code>,在 <code>src/core/instance/index.js</code> 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./init'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; stateMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./state'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./render'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; eventsMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./events'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; lifecycleMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./lifecycle'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Vue</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp;</span><br><span class=\"line\">    !(<span class=\"keyword\">this</span> <span class=\"keyword\">instanceof</span> Vue)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    warn(<span class=\"string\">'Vue is a constructor and should be called with the `new` keyword'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>._init(options)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">initMixin(Vue)</span><br><span class=\"line\">stateMixin(Vue)</span><br><span class=\"line\">eventsMixin(Vue)</span><br><span class=\"line\">lifecycleMixin(Vue)</span><br><span class=\"line\">renderMixin(Vue)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>可以看到vue是一个用 Function 实现的类，我们只能通过 new Vue 去实例化它。</p>\n<h3 id=\"initGlobalAPI-Vue\"><a href=\"#initGlobalAPI-Vue\" class=\"headerlink\" title=\"initGlobalAPI(Vue)\"></a>initGlobalAPI(Vue)</h3><p>在整个初始化过程中，除了给它的原型 prototype 上扩展方法，还会给 Vue 这个对象本身扩展全局的静态方法，它的定义在  <code>src/core/global-api/index.js</code> 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initGlobalAPI</span> (<span class=\"params\">Vue: GlobalAPI</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// config</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> configDef = &#123;&#125;</span><br><span class=\"line\">  configDef.get = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> config</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">    configDef.set = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      warn(</span><br><span class=\"line\">        <span class=\"string\">'Do not replace the Vue.config object, set individual fields instead.'</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperty(Vue, <span class=\"string\">'config'</span>, configDef)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exposed util methods.</span></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> these are not considered part of the public API - avoid relying on</span></span><br><span class=\"line\">  <span class=\"comment\">// them unless you are aware of the risk.</span></span><br><span class=\"line\">  Vue.util = &#123;</span><br><span class=\"line\">    warn,</span><br><span class=\"line\">    extend,</span><br><span class=\"line\">    mergeOptions,</span><br><span class=\"line\">    defineReactive</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Vue.set = <span class=\"keyword\">set</span></span><br><span class=\"line\">  Vue.delete = del</span><br><span class=\"line\">  Vue.nextTick = nextTick</span><br><span class=\"line\"></span><br><span class=\"line\">  Vue.options = Object.create(null)</span><br><span class=\"line\">  ASSET_TYPES.forEach(type =&gt; &#123;</span><br><span class=\"line\">    Vue.options[type + <span class=\"string\">'s'</span>] = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this is used to identify the \"base\" constructor to extend all plain-object</span></span><br><span class=\"line\">  <span class=\"comment\">// components with in Weex's multi-instance scenarios.</span></span><br><span class=\"line\">  Vue.options._base = Vue</span><br><span class=\"line\"></span><br><span class=\"line\">  extend(Vue.options.components, builtInComponents)</span><br><span class=\"line\"></span><br><span class=\"line\">  initUse(Vue)</span><br><span class=\"line\">  initMixin(Vue)</span><br><span class=\"line\">  initExtend(Vue)</span><br><span class=\"line\">  initAssetRegisters(Vue)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Vue 官网中关于全局 API 都可以在这里找到。有一点要注意的是，Vue.util 暴露的方法最好不要依赖，因为它可能经常会发生变化，是不稳定的。</p>\n","more":"</p>\n<h2 id=\"Flow\"><a href=\"#Flow\" class=\"headerlink\" title=\"Flow\"></a>Flow</h2><p><a href=\"https://flow.org/en/docs/getting-started/\" target=\"_blank\" rel=\"noopener\">Flow</a> 是 facebook 出品的 JavaScript 静态类型检查工具。Vue.js 的源码利用了 Flow 做了静态类型检查，所以了解 Flow 有助于我们阅读源码。</p>\n<p><em>类似的还有<a href=\"http://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">TypeScript</a>,这里推荐下<a href=\"https://ts.xcatliu.com/\" target=\"_blank\" rel=\"noopener\">https://ts.xcatliu.com/</a>，相对官网文档，更容易学习TS</em></p>\n<h3 id=\"类型检测\"><a href=\"#类型检测\" class=\"headerlink\" title=\"类型检测\"></a>类型检测</h3><p>类型检测的优点是有目共睹的，对于js其灵活性既是优点也有缺陷，过于灵活的副作用是很容易就写出非常隐蔽的隐患代码，在编译期甚至看上去都不会报错，但在运行阶段就可能出现各种奇怪的 bug。</p>\n<blockquote>\n<p>类型检查，就是在编译期尽早发现（由类型错误引起的）bug，又不影响代码运行（不需要运行时动态检查类型），使编写 JavaScript 具有和编写 Java 等强类型语言相近的体验。</p>\n</blockquote>\n<h3 id=\"为什么用flow\"><a href=\"#为什么用flow\" class=\"headerlink\" title=\"为什么用flow\"></a>为什么用flow</h3><p>Vue.js 在做 2.0 重构的时候，在 ES2015 的基础上，除了 ESLint 保证代码风格之外，也引入了 Flow 做静态类型检查。之所以选择 Flow，主要是因为 Babel 和 ESLint 都有对应的 Flow 插件以支持语法，可以完全沿用现有的构建配置，非常小成本的改动就可以拥有静态类型检查的能力。</p>\n<p><em>备注：这里个人推荐多人协作使用ts，个人或者需要类型检测可灵活配置时使用flow。</em></p>\n<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>这个简单写一下相关语法，熟悉ts或者后台语言，很容易理解这方面的知识。具体没提到的推荐在官网查看。</p>\n<h4 id=\"工作方式\"><a href=\"#工作方式\" class=\"headerlink\" title=\"工作方式\"></a>工作方式</h4><ul>\n<li>类型推断：通过变量的使用上下文来推断出变量类型，然后根据这些推断来检查类型。</li>\n<li>类型注释：事先注释好我们期待的类型，Flow 会基于这些注释来判断。</li>\n</ul>\n<h5 id=\"类型推断\"><a href=\"#类型推断\" class=\"headerlink\" title=\"类型推断\"></a>类型推断</h5><p>不需要任何代码修改即可进行类型检查，最小化开发者的工作量。它不会强制你改变开发习惯，因为它会自动推断出变量的类型。这就是所谓的类型推断，Flow 最重要的特性之一。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*@flow*/</span>    <span class=\"comment\">//有这个注释定义时，flow才会去识别</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">split</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.split(<span class=\"string\">' '</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">split(<span class=\"number\">11</span>) <span class=\"comment\">//报错，提示不是字符串类型</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"类型注释\"><a href=\"#类型注释\" class=\"headerlink\" title=\"类型注释\"></a>类型注释</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*@flow*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x: number, y: number</span>): <span class=\"title\">number</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + y</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"string\">'Hello'</span>, <span class=\"number\">11</span>) <span class=\"comment\">// x，y都应为num，报错提示类型错误</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组 Array&lt;T&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr: <span class=\"built_in\">Array</span>&lt;number&gt; = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">arr.push(<span class=\"string\">'Hello'</span>) <span class=\"comment\">// 报错，arr定义了数组类型应为number</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类和对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Bar</span> </span>&#123;</span><br><span class=\"line\">  x: string;           <span class=\"comment\">// x 是字符串</span></span><br><span class=\"line\">  y: string | number;  <span class=\"comment\">// y 可以是字符串或者数字</span></span><br><span class=\"line\">  z: boolean;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(x: string, y: string | number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.z = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar: Bar = <span class=\"keyword\">new</span> Bar(<span class=\"string\">'hello'</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj: &#123; <span class=\"attr\">a</span>: string, <span class=\"attr\">b</span>: number, <span class=\"attr\">c</span>: <span class=\"built_in\">Array</span>&lt;string&gt;, <span class=\"attr\">d</span>: Bar &#125; = &#123;</span><br><span class=\"line\">  a: <span class=\"string\">'hello'</span>,</span><br><span class=\"line\">  b: <span class=\"number\">11</span>,</span><br><span class=\"line\">  c: [<span class=\"string\">'hello'</span>, <span class=\"string\">'world'</span>],</span><br><span class=\"line\">  d: <span class=\"keyword\">new</span> Bar(<span class=\"string\">'hello'</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// null 若想任意类型 T 可以为 null 或者 undefined，只需类似如下写成 ?T 的格式即可</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo: ?string = <span class=\"literal\">null</span>  <span class=\"comment\">// foo可以时string也可以时null</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"vue源码中的flow\"><a href=\"#vue源码中的flow\" class=\"headerlink\" title=\"vue源码中的flow\"></a>vue源码中的flow</h3><p>想引用第三方库，或者自定义一些类型，但 Flow 并不认识，因此检查的时候会报错。为了解决这类问题，Flow 提出了一个 libdef 的概念，可以用来识别这些第三方库或者是自定义类型，而 Vue.js 也利用了这一特性。</p>\n<p>在 Vue.js 的主目录下有 .flowconfig 文件， 它是 Flow 的配置文件，感兴趣的同学可以看官方文档。这其中的 [libs] 部分用来描述包含指定库定义的目<br>录，默认是名为 flow-typed 的目录。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flow</span><br><span class=\"line\">├── compiler.js        # 编译相关</span><br><span class=\"line\">├── component.js       # 组件数据结构</span><br><span class=\"line\">├── global-api.js      # Global API 结构</span><br><span class=\"line\">├── modules.js         # 第三方库定义</span><br><span class=\"line\">├── options.js         # 选项相关</span><br><span class=\"line\">├── ssr.js             # 服务端渲染相关</span><br><span class=\"line\">├── vnode.js           # 虚拟 node 相关</span><br><span class=\"line\">├── weex.js            # weex框架 相关</span><br></pre></td></tr></table></figure>\n<p><em>关于weex，推荐官网<a href=\"https://weex.apache.org/zh/guide/introduction.html\" target=\"_blank\" rel=\"noopener\">https://weex.apache.org/zh/guide/introduction.html</a>，简单来讲就是一套代码多个平台。</em></p>\n<h2 id=\"vue源码目录\"><a href=\"#vue源码目录\" class=\"headerlink\" title=\"vue源码目录\"></a>vue源码目录</h2><p>主代码在src目录下，简单结构如下。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">├── compiler        # 编译相关</span><br><span class=\"line\">├── core            # 核心代码</span><br><span class=\"line\">├── platforms       # 不同平台的支持</span><br><span class=\"line\">├── server          # 服务端渲染</span><br><span class=\"line\">├── sfc             # .vue 文件解析</span><br><span class=\"line\">├── shared          # 共享代码</span><br></pre></td></tr></table></figure>\n<h3 id=\"compiler\"><a href=\"#compiler\" class=\"headerlink\" title=\"compiler\"></a>compiler</h3><p>compiler 目录包含 Vue.js 所有编译相关的代码。它包括把模板解析成 ast 语法树，ast 语法树优化，代码生成等功能。</p>\n<p>编译的工作可以在构建时做（借助 webpack、vue-loader 等辅助插件）；也可以在运行时做，使用包含构建功能的 Vue.js。显然，编译是一项耗性能的工作，所以更推荐前者——离线编译。</p>\n<h3 id=\"core\"><a href=\"#core\" class=\"headerlink\" title=\"core\"></a>core</h3><p>core 目录包含了 Vue.js 的核心代码，包括内置组件、全局 API 封装，Vue 实例化、观察者、虚拟 DOM、工具函数等等。</p>\n<h3 id=\"platforms\"><a href=\"#platforms\" class=\"headerlink\" title=\"platforms\"></a>platforms</h3><p>Vue.js 是一个跨平台的 MVVM 框架，它可以跑在 web 上，也可以配合 weex 跑在 native 客户端上。platform 是 Vue.js 的入口，2 个目录代表 2 个主要入口，分别打包成运行在 web 上和 weex 上的 Vue.js。</p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><p>Vue.js 2.0 支持了服务端渲染，所有服务端渲染相关的逻辑都在这个目录下。注意：这部分代码是跑在服务端的 Node.js</p>\n<p>服务端渲染主要的工作是把组件渲染为服务器端的 HTML 字符串，将它们直接发送到浏览器，最后将静态标记”混合”为客户端上完全交互的应用程序。</p>\n<h3 id=\"sfc\"><a href=\"#sfc\" class=\"headerlink\" title=\"sfc\"></a>sfc</h3><p>通常我们开发 Vue.js 都会借助 webpack 构建， 然后通过 .vue 单文件来编写组件。这个目录下的代码逻辑会把 .vue 文件内容解析成一个 JavaScript 的对象。</p>\n<h3 id=\"shared\"><a href=\"#shared\" class=\"headerlink\" title=\"shared\"></a>shared</h3><p>Vue.js 会定义一些工具方法，这里定义的工具方法都是会被浏览器端的 Vue.js 和服务端的 Vue.js 所共享的。</p>\n<h2 id=\"源码构建\"><a href=\"#源码构建\" class=\"headerlink\" title=\"源码构建\"></a>源码构建</h2><p>Vue.js 源码是基于 <a href=\"https://github.com/rollup/rollup\" target=\"_blank\" rel=\"noopener\">Rollup</a> 构建的，它的构建相关配置都在 scripts 目录下。</p>\n<h3 id=\"构建脚本\"><a href=\"#构建脚本\" class=\"headerlink\" title=\"构建脚本\"></a>构建脚本</h3><p>基于 NPM 托管的项目都会有一个 package.json 文件。总共有 3 条命令，作用都是构建 Vue.js，后面 2 条是在第一条命令的基础上，添加一些环境参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"script\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node scripts/build.js\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build:ssr\"</span>: <span class=\"string\">\"npm run build -- web-runtime-cjs,web-server-renderer\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build:weex\"</span>: <span class=\"string\">\"npm run build -- weex\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建过程\"><a href=\"#构建过程\" class=\"headerlink\" title=\"构建过程\"></a>构建过程</h3><p>构建的入口 JS 文件，在 scripts/build.js 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> builds = <span class=\"built_in\">require</span>(<span class=\"string\">'./config'</span>).getAllBuilds()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// filter builds via command line arg</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (process.argv[<span class=\"number\">2</span>]) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> filters = process.argv[<span class=\"number\">2</span>].split(<span class=\"string\">','</span>)</span><br><span class=\"line\">  builds = builds.filter(<span class=\"function\"><span class=\"params\">b</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> filters.some(<span class=\"function\"><span class=\"params\">f</span> =&gt;</span> b.output.file.indexOf(f) &gt; <span class=\"number\">-1</span> || b._name.indexOf(f) &gt; <span class=\"number\">-1</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// filter out weex builds by default</span></span><br><span class=\"line\">  builds = builds.filter(<span class=\"function\"><span class=\"params\">b</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b.output.file.indexOf(<span class=\"string\">'weex'</span>) === <span class=\"number\">-1</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">build(builds)</span><br></pre></td></tr></table></figure>\n<p>配置文件，在 scripts/config.js 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> builds = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Runtime only (CommonJS). Used by bundlers e.g. Webpack &amp; Browserify</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-cjs'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.common.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'cjs'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler CommonJS build (CommonJS)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-cjs'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.common.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'cjs'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime only (ES Modules). Used by bundlers that support ES Modules,</span></span><br><span class=\"line\">  <span class=\"comment\">// e.g. Rollup &amp; Webpack 2</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-esm'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.esm.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'es'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler CommonJS build (ES Modules)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-esm'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.esm.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'es'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// runtime-only build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-dev'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// runtime-only production build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-runtime-prod'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.runtime.min.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler development build (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-dev'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'development'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// Runtime+compiler production build  (Browser)</span></span><br><span class=\"line\">  <span class=\"string\">'web-full-prod'</span>: &#123;</span><br><span class=\"line\">    entry: resolve(<span class=\"string\">'web/entry-runtime-with-compiler.js'</span>),</span><br><span class=\"line\">    dest: resolve(<span class=\"string\">'dist/vue.min.js'</span>),</span><br><span class=\"line\">    format: <span class=\"string\">'umd'</span>,</span><br><span class=\"line\">    env: <span class=\"string\">'production'</span>,</span><br><span class=\"line\">    alias: &#123; <span class=\"attr\">he</span>: <span class=\"string\">'./entity-decoder'</span> &#125;,</span><br><span class=\"line\">    banner</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中 <code>entry</code> 属性表示构建的入口 JS 文件地址，<code>dest</code> 属性表示构建后的 JS 文件地址。<code>format</code> 属性表示构建的格式，<code>cjs</code> 表示构建出来的文件遵循 <a href=\"http://wiki.commonjs.org/wiki/Modules/1.1\" target=\"_blank\" rel=\"noopener\">CommonJS</a> 规范，<code>es</code> 表示构建出来的文件遵循 <a href=\"http://exploringjs.com/es6/ch_modules.html\" target=\"_blank\" rel=\"noopener\">ES Module</a> 规范。 <code>umd</code> 表示构建出来的文件遵循 <a href=\"https://github.com/umdjs/umd\" target=\"_blank\" rel=\"noopener\">UMD</a> 规范。</p>\n<p>主要使用web端，以 <code>web-runtime-cjs</code> 配置为例，它的 <code>entry</code> 是 <code>resolve(&#39;web/entry-runtime.js&#39;)</code> 下面是 <code>resolve</code> 函数的定义。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 源码目录：scripts/config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> aliases = <span class=\"built_in\">require</span>(<span class=\"string\">'./alias'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> resolve = <span class=\"function\"><span class=\"params\">p</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = p.split(<span class=\"string\">'/'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (aliases[base]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.resolve(aliases[base], p.slice(base.length + <span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path.resolve(__dirname, <span class=\"string\">'../'</span>, p)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先把 <code>resolve</code> 函数传入的参数 <code>p</code> 通过 / 做了分割成数组，然后取数组第一个元素设置为 <code>base</code>。在我们这个例子中，参数 <code>p</code> 是 <code>web/entry-runtime.js</code>，那么 <code>base</code> 则为 <code>web</code>。<code>base</code> 并不是实际的路径，它的真实路径借助了别名的配置，我们来看一下别名配置的代码，在 <code>scripts/alias</code> 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  vue: path.resolve(__dirname, <span class=\"string\">'../src/platforms/web/entry-runtime-with-compiler'</span>),</span><br><span class=\"line\">  compiler: path.resolve(__dirname, <span class=\"string\">'../src/compiler'</span>),</span><br><span class=\"line\">  core: path.resolve(__dirname, <span class=\"string\">'../src/core'</span>),</span><br><span class=\"line\">  shared: path.resolve(__dirname, <span class=\"string\">'../src/shared'</span>),</span><br><span class=\"line\">  web: path.resolve(__dirname, <span class=\"string\">'../src/platforms/web'</span>),</span><br><span class=\"line\">  weex: path.resolve(__dirname, <span class=\"string\">'../src/platforms/weex'</span>),</span><br><span class=\"line\">  server: path.resolve(__dirname, <span class=\"string\">'../src/server'</span>),</span><br><span class=\"line\">  entries: path.resolve(__dirname, <span class=\"string\">'../src/entries'</span>),</span><br><span class=\"line\">  sfc: path.resolve(__dirname, <span class=\"string\">'../src/sfc'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里 <code>web</code> 对应的真实的路径是 <code>path.resolve(__dirname, &#39;../src/platforms/web&#39;)</code>，这个路径就找到了 <code>Vue.js</code> 源码的 <code>web</code> 目录。然后 <code>resolve</code> 函数通过 <code>path.resolve(aliases[base]</code>, <code>p.slice(base.length + 1))</code> 找到了最终路径，它就是 <code>Vue.js</code> 源码 <code>web</code> 目录下的 <code>entry-runtime.js</code>。因此，<code>web-runtime-cjs</code> 配置对应的入口文件就找到了。</p>\n<p>它经过 <code>Rollup</code> 的构建打包后，最终会在 <code>dist</code> 目录下生成 <code>vue.runtime.common.js</code></p>\n<h3 id=\"关于Runtime-Only-OR-Runtime-Compiler\"><a href=\"#关于Runtime-Only-OR-Runtime-Compiler\" class=\"headerlink\" title=\"关于Runtime Only OR Runtime + Compiler\"></a>关于Runtime Only OR Runtime + Compiler</h3><ul>\n<li>Runtime Only</li>\n</ul>\n<p>通常需要借助如 webpack 的 vue-loader 工具把 .vue 文件编译成 JavaScript，因为是在编译阶段做的，所以它只包含运行时的 Vue.js 代码，因此代码体积也会更轻量。</p>\n<ul>\n<li>Runtime + Compiler</li>\n</ul>\n<p>没有对代码做预编译，但又使用了 Vue 的 template 属性并传入一个字符串，则需要在客户端编译模板，如下所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 需要编译器的版本</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  template: <span class=\"string\">'&lt;div&gt;&#123;&#123; hi &#125;&#125;&lt;/div&gt;'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  render (h) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> h(<span class=\"string\">'div'</span>, <span class=\"keyword\">this</span>.hi)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>在 Vue.js 2.0 中，最终渲染都是通过 render 函数。</p>\n<h2 id=\"入口\"><a href=\"#入口\" class=\"headerlink\" title=\"入口\"></a>入口</h2><p>在 web 应用下，<code>Runtime + Compiler</code> 构建出来的 <code>Vue.js</code>，它的入口是 <code>src/platforms/web/entry-runtime-with-compiler.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* @flow */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'core/config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn, cached &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mark, measure &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/perf'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'./runtime/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; query &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./util/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; compileToFunctions &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./compiler/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; shouldDecodeNewlines, shouldDecodeNewlinesForHref &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./util/compat'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> idToTemplate = cached(<span class=\"function\"><span class=\"params\">id</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> el = query(id)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> el &amp;&amp; el.innerHTML</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> mount = Vue.prototype.$mount</span><br><span class=\"line\">Vue.prototype.$mount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  el?: string | Element,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  hydrating?: boolean</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>): <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  el = el &amp;&amp; query(el)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el === <span class=\"built_in\">document</span>.body || el === <span class=\"built_in\">document</span>.documentElement) &#123;</span><br><span class=\"line\">    process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; warn(</span><br><span class=\"line\">      <span class=\"string\">`Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.`</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> options = <span class=\"keyword\">this</span>.$options</span><br><span class=\"line\">  <span class=\"comment\">// resolve template/el and convert to render function</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!options.render) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> template = options.template</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> template === <span class=\"string\">'string'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (template.charAt(<span class=\"number\">0</span>) === <span class=\"string\">'#'</span>) &#123;</span><br><span class=\"line\">          template = idToTemplate(template)</span><br><span class=\"line\">          <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; !template) &#123;</span><br><span class=\"line\">            warn(</span><br><span class=\"line\">              <span class=\"string\">`Template element not found or is empty: <span class=\"subst\">$&#123;options.template&#125;</span>`</span>,</span><br><span class=\"line\">              <span class=\"keyword\">this</span></span><br><span class=\"line\">            )</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (template.nodeType) &#123;</span><br><span class=\"line\">        template = template.innerHTML</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">          warn(<span class=\"string\">'invalid template option:'</span> + template, <span class=\"keyword\">this</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (el) &#123;</span><br><span class=\"line\">      template = getOuterHTML(el)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (template) &#123;</span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; config.performance &amp;&amp; mark) &#123;</span><br><span class=\"line\">        mark(<span class=\"string\">'compile'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; render, staticRenderFns &#125; = compileToFunctions(template, &#123;</span><br><span class=\"line\">        shouldDecodeNewlines,</span><br><span class=\"line\">        shouldDecodeNewlinesForHref,</span><br><span class=\"line\">        delimiters: options.delimiters,</span><br><span class=\"line\">        comments: options.comments</span><br><span class=\"line\">      &#125;, <span class=\"keyword\">this</span>)</span><br><span class=\"line\">      options.render = render</span><br><span class=\"line\">      options.staticRenderFns = staticRenderFns</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">/* istanbul ignore if */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp; config.performance &amp;&amp; mark) &#123;</span><br><span class=\"line\">        mark(<span class=\"string\">'compile end'</span>)</span><br><span class=\"line\">        measure(<span class=\"string\">`vue <span class=\"subst\">$&#123;<span class=\"keyword\">this</span>._name&#125;</span> compile`</span>, <span class=\"string\">'compile'</span>, <span class=\"string\">'compile end'</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> mount.call(<span class=\"keyword\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Get outerHTML of elements, taking care</span></span><br><span class=\"line\"><span class=\"comment\"> * of SVG elements in IE as well.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getOuterHTML</span> (<span class=\"params\">el: Element</span>): <span class=\"title\">string</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (el.outerHTML) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> el.outerHTML</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>)</span><br><span class=\"line\">    container.appendChild(el.cloneNode(<span class=\"literal\">true</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> container.innerHTML</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.compile = compileToFunctions</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>通过<code>import Vue from &#39;./runtime/index&#39;</code>,它定义在 <code>src/platforms/web/runtime/index.js</code> 中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'core/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'core/config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; extend, noop &#125; <span class=\"keyword\">from</span> <span class=\"string\">'shared/util'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mountComponent &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/instance/lifecycle'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; devtools, inBrowser, isChrome &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  query,</span><br><span class=\"line\">  mustUseProp,</span><br><span class=\"line\">  isReservedTag,</span><br><span class=\"line\">  isReservedAttr,</span><br><span class=\"line\">  getTagNamespace,</span><br><span class=\"line\">  isUnknownElement</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">'web/util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; patch &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./patch'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> platformDirectives <span class=\"keyword\">from</span> <span class=\"string\">'./directives/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> platformComponents <span class=\"keyword\">from</span> <span class=\"string\">'./components/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform specific utils</span></span><br><span class=\"line\">Vue.config.mustUseProp = mustUseProp</span><br><span class=\"line\">Vue.config.isReservedTag = isReservedTag</span><br><span class=\"line\">Vue.config.isReservedAttr = isReservedAttr</span><br><span class=\"line\">Vue.config.getTagNamespace = getTagNamespace</span><br><span class=\"line\">Vue.config.isUnknownElement = isUnknownElement</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform runtime directives &amp; components</span></span><br><span class=\"line\">extend(Vue.options.directives, platformDirectives)</span><br><span class=\"line\">extend(Vue.options.components, platformComponents)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// install platform patch function</span></span><br><span class=\"line\">Vue.prototype.__patch__ = inBrowser ? patch : noop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// public mount method</span></span><br><span class=\"line\">Vue.prototype.$mount = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  el?: string | Element,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  hydrating?: boolean</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>): <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  el = el &amp;&amp; inBrowser ? query(el) : <span class=\"literal\">undefined</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> mountComponent(<span class=\"keyword\">this</span>, el, hydrating)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>通过<code>import Vue from &#39;core/index&#39;</code>,在 <code>src/core/index.js 中</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'./instance/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initGlobalAPI &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./global-api/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isServerRendering &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/util/env'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; FunctionalRenderContext &#125; <span class=\"keyword\">from</span> <span class=\"string\">'core/vdom/create-functional-component'</span></span><br><span class=\"line\"></span><br><span class=\"line\">initGlobalAPI(Vue)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Vue.prototype, <span class=\"string\">'$isServer'</span>, &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span>: isServerRendering</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(Vue.prototype, '$ssrContext', &#123;</span><br><span class=\"line\">  <span class=\"keyword\">get</span> () &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore next */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$vnode &amp;&amp; <span class=\"keyword\">this</span>.$vnode.ssrContext</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// expose FunctionalRenderContext for ssr runtime helper installation</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Vue, <span class=\"string\">'FunctionalRenderContext'</span>, &#123;</span><br><span class=\"line\">  value: FunctionalRenderContext</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.version = <span class=\"string\">'__VERSION__'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<h3 id=\"vue定义\"><a href=\"#vue定义\" class=\"headerlink\" title=\"vue定义\"></a>vue定义</h3><p>通过<code>import Vue from &#39;./instance/index&#39;</code>,在 <code>src/core/instance/index.js</code> 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./init'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; stateMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./state'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./render'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; eventsMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./events'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; lifecycleMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./lifecycle'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../util/index'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Vue</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span> &amp;&amp;</span><br><span class=\"line\">    !(<span class=\"keyword\">this</span> <span class=\"keyword\">instanceof</span> Vue)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    warn(<span class=\"string\">'Vue is a constructor and should be called with the `new` keyword'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>._init(options)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">initMixin(Vue)</span><br><span class=\"line\">stateMixin(Vue)</span><br><span class=\"line\">eventsMixin(Vue)</span><br><span class=\"line\">lifecycleMixin(Vue)</span><br><span class=\"line\">renderMixin(Vue)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Vue</span><br></pre></td></tr></table></figure>\n<p>可以看到vue是一个用 Function 实现的类，我们只能通过 new Vue 去实例化它。</p>\n<h3 id=\"initGlobalAPI-Vue\"><a href=\"#initGlobalAPI-Vue\" class=\"headerlink\" title=\"initGlobalAPI(Vue)\"></a>initGlobalAPI(Vue)</h3><p>在整个初始化过程中，除了给它的原型 prototype 上扩展方法，还会给 Vue 这个对象本身扩展全局的静态方法，它的定义在  <code>src/core/global-api/index.js</code> 中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initGlobalAPI</span> (<span class=\"params\">Vue: GlobalAPI</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// config</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> configDef = &#123;&#125;</span><br><span class=\"line\">  configDef.get = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> config</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.env.NODE_ENV !== <span class=\"string\">'production'</span>) &#123;</span><br><span class=\"line\">    configDef.set = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      warn(</span><br><span class=\"line\">        <span class=\"string\">'Do not replace the Vue.config object, set individual fields instead.'</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperty(Vue, <span class=\"string\">'config'</span>, configDef)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exposed util methods.</span></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> these are not considered part of the public API - avoid relying on</span></span><br><span class=\"line\">  <span class=\"comment\">// them unless you are aware of the risk.</span></span><br><span class=\"line\">  Vue.util = &#123;</span><br><span class=\"line\">    warn,</span><br><span class=\"line\">    extend,</span><br><span class=\"line\">    mergeOptions,</span><br><span class=\"line\">    defineReactive</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Vue.set = <span class=\"keyword\">set</span></span><br><span class=\"line\">  Vue.delete = del</span><br><span class=\"line\">  Vue.nextTick = nextTick</span><br><span class=\"line\"></span><br><span class=\"line\">  Vue.options = Object.create(null)</span><br><span class=\"line\">  ASSET_TYPES.forEach(type =&gt; &#123;</span><br><span class=\"line\">    Vue.options[type + <span class=\"string\">'s'</span>] = <span class=\"built_in\">Object</span>.create(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this is used to identify the \"base\" constructor to extend all plain-object</span></span><br><span class=\"line\">  <span class=\"comment\">// components with in Weex's multi-instance scenarios.</span></span><br><span class=\"line\">  Vue.options._base = Vue</span><br><span class=\"line\"></span><br><span class=\"line\">  extend(Vue.options.components, builtInComponents)</span><br><span class=\"line\"></span><br><span class=\"line\">  initUse(Vue)</span><br><span class=\"line\">  initMixin(Vue)</span><br><span class=\"line\">  initExtend(Vue)</span><br><span class=\"line\">  initAssetRegisters(Vue)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Vue 官网中关于全局 API 都可以在这里找到。有一点要注意的是，Vue.util 暴露的方法最好不要依赖，因为它可能经常会发生变化，是不稳定的。</p>","categories":[{"name":"vue","path":"api/categories/vue.json"}],"tags":[{"name":"webpack","path":"api/tags/webpack.json"},{"name":"源码","path":"api/tags/源码.json"},{"name":"类型检测","path":"api/tags/类型检测.json"}]}