{"title":"高程笔记-数组","slug":"高程笔记-数组","date":"2017-01-20T16:00:00.000Z","updated":"2017-01-20T16:00:00.000Z","comments":true,"path":"api/articles/高程笔记-数组.json","excerpt":"《JavaScript高级程序》笔记，包含数组的创建、检测以及数组方法。<br>","covers":null,"content":"<p>《JavaScript高级程序》笔记，包含数组的创建、检测以及数组方法。<br><a id=\"more\"></a></p>\n<h2 id=\"创建方式\"><a href=\"#创建方式\" class=\"headerlink\" title=\"创建方式\"></a>创建方式</h2><ul>\n<li>构造函数<code>var arr = new Array(1,2,3)</code></li>\n<li>字面量方式<code>var arr = [1,2,3]</code></li>\n</ul>\n<h2 id=\"继承Object\"><a href=\"#继承Object\" class=\"headerlink\" title=\"继承Object\"></a>继承Object</h2><p>以下方法原始值由<strong>Array对象</strong>派生的所有对象继承。</p>\n<p><code>toSource()</code>: 返回该对象的源代码。仅Gecko 核心的浏览器支持。<br><code>toString()</code>: 把数组转换为字符串，并返回结果<br><code>toLocaleString()</code>: 把数组转换为本地数组，并返回结果<br><code>valueOf()</code>: 返回数组对象的原始值</p>\n<h2 id=\"检测数组\"><a href=\"#检测数组\" class=\"headerlink\" title=\"检测数组\"></a>检测数组</h2><p>es3方法<code>value instanceof Array</code>,仅用在单一全局执行环境。<br>es5方法<code>Array.isArray(vlaue)</code>，不限环境，需要ie9+及以上版本支持。</p>\n<h2 id=\"不会改变原始数组\"><a href=\"#不会改变原始数组\" class=\"headerlink\" title=\"不会改变原始数组\"></a>不会改变原始数组</h2><h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h3><p>连接两个或更多的数组，并返回结果。<br><strong>arrayObject.concat(arrayX,arrayX,……,arrayX)</strong>其中<code>arrayX</code>可以是数组也可以是具体值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],</span><br><span class=\"line\">    b = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.concat(b));     <span class=\"comment\">//[1, 2, 3, 4, 5, 6]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.concat(<span class=\"number\">0</span>,<span class=\"number\">-1</span>,b));<span class=\"comment\">//[1, 2, 3, 0, -1, 4, 5, 6]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join()\"></a>join()</h3><p>把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br><strong>arrayObject.join(separator)</strong>，其中<code>separator</code>可选。指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\">arr.join();    <span class=\"comment\">//\"h,e,l,l,o\"</span></span><br><span class=\"line\">arr.join(<span class=\"string\">''</span>);  <span class=\"comment\">//\"hello\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice()\"></a>slice()</h3><p>从某个已有的数组返回选定的元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.slice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [\"l\", \"l\", \"o\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"改变原始数组\"><a href=\"#改变原始数组\" class=\"headerlink\" title=\"改变原始数组\"></a>改变原始数组</h2><h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop()\"></a>pop()</h3><p>删除并返回数组的最后一个元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.pop();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">//[\"h\", \"e\", \"l\", \"l\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// o</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push()\"></a>push()</h3><p>向数组的末尾添加一个或更多元素，并返回新的长度。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.push(<span class=\"string\">'!'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"e\", \"l\", \"l\", \"o\", \"!\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift()\"></a>shift()</h3><p>删除并返回数组的第一个元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.shift();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// h</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift()\"></a>unshift()</h3><p>向数组的开头添加一个或更多元素，并返回新的长度。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.unshift(<span class=\"string\">'say:'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"say:\", \"h\", \"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h3><p>对数组的元素进行排序。返回对数组的引用。在原数组上排序。<br><strong>arrayObject.sort(sortby)</strong>，其中<code>sortby</code>可选。规定排序顺序。必须是函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.sort()) <span class=\"comment\">//[1, 10, 2, 4, 7, 9]默认排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a &lt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a = b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//方法简化</span></span><br><span class=\"line\"><span class=\"comment\">//var callback =arr.sort(function(a,b)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    return a-b</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [1, 2, 4, 7, 9，10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [1, 2, 4, 7, 9，10]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice()\"></a>splice()</h3><p>删除元素，并向数组添加新元素。返回删除项的数组。<br><strong>arrayObject.splice(index,howmany,item1,…..,itemX)</strong>，其中<code>index</code>，必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。<code>howmany</code>，必需。要删除的项目数量。如果设置为 0，则不会删除项目。<code>item1,.....,itemX</code>,可选。向数组添加的新项目。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.splice(<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'!'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"i\", \"!\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [\"e\", \"l\", \"l\", \"o\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"es5的五种数组迭代方式\"><a href=\"#es5的五种数组迭代方式\" class=\"headerlink\" title=\"es5的五种数组迭代方式\"></a>es5的五种数组迭代方式</h2><ul>\n<li><p><code>every()</code>:对数组中每一项运行给定函数，如果该函数对每一项都返回true,则返回true。</p>\n</li>\n<li><p><code>filter()</code>:对数组中每一项运行给定函数，返回该函数会返回true的项组成的数组。</p>\n</li>\n<li><p><code>forEach()</code>:对数组中每一项运行给定函数，这个方法没有返回值。</p>\n</li>\n<li><p><code>map()</code>:对数组中每一项运行给定函数，返回每次函数掉用的结果组成的数组。</p>\n</li>\n<li><p><code>some()</code>:对数组中每一项运行给定函数，如果该函数对任一项返回true,则返回true。</p>\n</li>\n</ul>\n<p>备注：<strong>以上方法都不会修改数组中的值。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> everyResult = numbers.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( everyResult ) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> someResult = numbers.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( someResult ) <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> filterResult = numbers.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( filterResult ) <span class=\"comment\">//[3,4,5,4,3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapResult = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item * <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( mapResult ) <span class=\"comment\">//[2,4,6,8,10,8,6,4,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\">numbers.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行程序</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>IE9+、FireFox2+、Safari3+、Opera9.5+ 和Chrome兼容。</p>\n<h2 id=\"es5缩小方法\"><a href=\"#es5缩小方法\" class=\"headerlink\" title=\"es5缩小方法\"></a>es5缩小方法</h2><p><code>reduce()</code>和<code>reduceRight()</code>，都会迭代数组所有项，构建一个最终返回的值，第一个是从头到尾迭代，第二个是从尾到头。<br>参数两个[callback, initialValue]</p>\n<ul>\n<li><code>initialValue</code>：可选参数, 作为第一次调用 callback 的第一个参数</li>\n<li><code>callback</code>:function(previousValue,currentValue,currentIndex,array){}<ul>\n<li><code>previousValue</code>：上一次调用回调函数返回的值，或者是提供的初始值（initialValue）</li>\n<li><code>currentValue</code>：数组中当前被处理的元素</li>\n<li><code>currentIndex</code>：当前被处理元素在数组中的索引, 即currentValue的索引.如果有initialValue初始值, 从0开始.如果没有从1开始</li>\n<li><code>array</code>：调用 reduce 的数组</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = value.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev,cur,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">alert(sum) <span class=\"comment\">//15</span></span><br></pre></td></tr></table></figure>\n","more":"</p>\n<h2 id=\"创建方式\"><a href=\"#创建方式\" class=\"headerlink\" title=\"创建方式\"></a>创建方式</h2><ul>\n<li>构造函数<code>var arr = new Array(1,2,3)</code></li>\n<li>字面量方式<code>var arr = [1,2,3]</code></li>\n</ul>\n<h2 id=\"继承Object\"><a href=\"#继承Object\" class=\"headerlink\" title=\"继承Object\"></a>继承Object</h2><p>以下方法原始值由<strong>Array对象</strong>派生的所有对象继承。</p>\n<p><code>toSource()</code>: 返回该对象的源代码。仅Gecko 核心的浏览器支持。<br><code>toString()</code>: 把数组转换为字符串，并返回结果<br><code>toLocaleString()</code>: 把数组转换为本地数组，并返回结果<br><code>valueOf()</code>: 返回数组对象的原始值</p>\n<h2 id=\"检测数组\"><a href=\"#检测数组\" class=\"headerlink\" title=\"检测数组\"></a>检测数组</h2><p>es3方法<code>value instanceof Array</code>,仅用在单一全局执行环境。<br>es5方法<code>Array.isArray(vlaue)</code>，不限环境，需要ie9+及以上版本支持。</p>\n<h2 id=\"不会改变原始数组\"><a href=\"#不会改变原始数组\" class=\"headerlink\" title=\"不会改变原始数组\"></a>不会改变原始数组</h2><h3 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h3><p>连接两个或更多的数组，并返回结果。<br><strong>arrayObject.concat(arrayX,arrayX,……,arrayX)</strong>其中<code>arrayX</code>可以是数组也可以是具体值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],</span><br><span class=\"line\">    b = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.concat(b));     <span class=\"comment\">//[1, 2, 3, 4, 5, 6]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.concat(<span class=\"number\">0</span>,<span class=\"number\">-1</span>,b));<span class=\"comment\">//[1, 2, 3, 0, -1, 4, 5, 6]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join()\"></a>join()</h3><p>把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。<br><strong>arrayObject.join(separator)</strong>，其中<code>separator</code>可选。指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\">arr.join();    <span class=\"comment\">//\"h,e,l,l,o\"</span></span><br><span class=\"line\">arr.join(<span class=\"string\">''</span>);  <span class=\"comment\">//\"hello\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice()\"></a>slice()</h3><p>从某个已有的数组返回选定的元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.slice(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [\"l\", \"l\", \"o\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"改变原始数组\"><a href=\"#改变原始数组\" class=\"headerlink\" title=\"改变原始数组\"></a>改变原始数组</h2><h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop()\"></a>pop()</h3><p>删除并返回数组的最后一个元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.pop();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">//[\"h\", \"e\", \"l\", \"l\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// o</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push()\"></a>push()</h3><p>向数组的末尾添加一个或更多元素，并返回新的长度。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.push(<span class=\"string\">'!'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"e\", \"l\", \"l\", \"o\", \"!\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift()\"></a>shift()</h3><p>删除并返回数组的第一个元素。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.shift();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// h</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift()\"></a>unshift()</h3><p>向数组的开头添加一个或更多元素，并返回新的长度。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.unshift(<span class=\"string\">'say:'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"say:\", \"h\", \"e\", \"l\", \"l\", \"o\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort()\"></a>sort()</h3><p>对数组的元素进行排序。返回对数组的引用。在原数组上排序。<br><strong>arrayObject.sort(sortby)</strong>，其中<code>sortby</code>可选。规定排序顺序。必须是函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr.sort()) <span class=\"comment\">//[1, 10, 2, 4, 7, 9]默认排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a &lt; b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">-1</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a = b)&#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;<span class=\"keyword\">return</span> <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//方法简化</span></span><br><span class=\"line\"><span class=\"comment\">//var callback =arr.sort(function(a,b)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    return a-b</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [1, 2, 4, 7, 9，10]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [1, 2, 4, 7, 9，10]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice()\"></a>splice()</h3><p>删除元素，并向数组添加新元素。返回删除项的数组。<br><strong>arrayObject.splice(index,howmany,item1,…..,itemX)</strong>，其中<code>index</code>，必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。<code>howmany</code>，必需。要删除的项目数量。如果设置为 0，则不会删除项目。<code>item1,.....,itemX</code>,可选。向数组添加的新项目。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'h'</span>,<span class=\"string\">'e'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'l'</span>,<span class=\"string\">'o'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> callback =arr.splice(<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"string\">'i'</span>,<span class=\"string\">'!'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr);       <span class=\"comment\">// [\"h\", \"i\", \"!\"]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(callback);  <span class=\"comment\">// [\"e\", \"l\", \"l\", \"o\"]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"es5的五种数组迭代方式\"><a href=\"#es5的五种数组迭代方式\" class=\"headerlink\" title=\"es5的五种数组迭代方式\"></a>es5的五种数组迭代方式</h2><ul>\n<li><p><code>every()</code>:对数组中每一项运行给定函数，如果该函数对每一项都返回true,则返回true。</p>\n</li>\n<li><p><code>filter()</code>:对数组中每一项运行给定函数，返回该函数会返回true的项组成的数组。</p>\n</li>\n<li><p><code>forEach()</code>:对数组中每一项运行给定函数，这个方法没有返回值。</p>\n</li>\n<li><p><code>map()</code>:对数组中每一项运行给定函数，返回每次函数掉用的结果组成的数组。</p>\n</li>\n<li><p><code>some()</code>:对数组中每一项运行给定函数，如果该函数对任一项返回true,则返回true。</p>\n</li>\n</ul>\n<p>备注：<strong>以上方法都不会修改数组中的值。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> everyResult = numbers.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( everyResult ) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> someResult = numbers.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( someResult ) <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> filterResult = numbers.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( filterResult ) <span class=\"comment\">//[3,4,5,4,3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> mapResult = numbers.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ( item * <span class=\"number\">2</span> )</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( mapResult ) <span class=\"comment\">//[2,4,6,8,10,8,6,4,2]</span></span><br><span class=\"line\"></span><br><span class=\"line\">numbers.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//执行程序</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>IE9+、FireFox2+、Safari3+、Opera9.5+ 和Chrome兼容。</p>\n<h2 id=\"es5缩小方法\"><a href=\"#es5缩小方法\" class=\"headerlink\" title=\"es5缩小方法\"></a>es5缩小方法</h2><p><code>reduce()</code>和<code>reduceRight()</code>，都会迭代数组所有项，构建一个最终返回的值，第一个是从头到尾迭代，第二个是从尾到头。<br>参数两个[callback, initialValue]</p>\n<ul>\n<li><code>initialValue</code>：可选参数, 作为第一次调用 callback 的第一个参数</li>\n<li><code>callback</code>:function(previousValue,currentValue,currentIndex,array){}<ul>\n<li><code>previousValue</code>：上一次调用回调函数返回的值，或者是提供的初始值（initialValue）</li>\n<li><code>currentValue</code>：数组中当前被处理的元素</li>\n<li><code>currentIndex</code>：当前被处理元素在数组中的索引, 即currentValue的索引.如果有initialValue初始值, 从0开始.如果没有从1开始</li>\n<li><code>array</code>：调用 reduce 的数组</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> value = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = value.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev,cur,index,array</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">alert(sum) <span class=\"comment\">//15</span></span><br></pre></td></tr></table></figure>","categories":[{"name":"js","path":"api/categories/js.json"}],"tags":[{"name":"笔记","path":"api/tags/笔记.json"},{"name":"Array","path":"api/tags/Array.json"}]}