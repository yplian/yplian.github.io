{"title":"html5属性","slug":"html5属性","date":"2016-12-27T16:00:00.000Z","updated":"2016-12-27T16:00:00.000Z","comments":true,"path":"api/articles/html5属性.json","excerpt":"临近年关，时间比较多，就看了下html5的东西，发现这些不太常见的属性还是蛮好玩的，记录下，便于今后检索查找。<br>","covers":null,"content":"<p>临近年关，时间比较多，就看了下html5的东西，发现这些不太常见的属性还是蛮好玩的，记录下，便于今后检索查找。<br><a id=\"more\"></a></p>\n<h2 id=\"accesskey\"><a href=\"#accesskey\" class=\"headerlink\" title=\"accesskey\"></a>accesskey</h2><p><code>&lt;element accesskey=&quot;character&quot;&gt;</code>,绑定快捷键用的，通过Alt + character 就能触发。</p>\n<ul>\n<li>几乎所有浏览器均 accesskey 属性，除了 Opera。</li>\n<li>支持 accesskey 属性：<code>&lt;a&gt;, &lt;area&gt;, &lt;button&gt;, &lt;input&gt;, &lt;label&gt;, &lt;legend&gt; 以及 &lt;textarea&gt;</code>。</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/fny1dv4p/1/embedded/html,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<h2 id=\"contenteditable与spellcheck\"><a href=\"#contenteditable与spellcheck\" class=\"headerlink\" title=\"contenteditable与spellcheck\"></a>contenteditable与spellcheck</h2><p><code>&lt;element contenteditable=&quot;true|false&quot;&gt;</code>是元素内容是否可编辑。<br><code>&lt;element spellcheck=&quot;true|false&quot;&gt;</code>是否对元素进行拼写和语法检查。</p>\n<ul>\n<li>所有主流浏览器都支持 contenteditable 属性。</li>\n<li>Internet Explorer 9 以及更早的版本不支持 spellcheck 属性。</li>\n<li><code>spellcheck</code>可检测的是<ul>\n<li>input 元素中的文本值（非密码）</li>\n<li><code>&lt;textarea&gt;</code>元素中的文本</li>\n<li>可编辑元素中的文本</li>\n</ul>\n</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/q6n4oywn/3/embedded/html,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<h2 id=\"translate\"><a href=\"#translate\" class=\"headerlink\" title=\"translate\"></a>translate</h2><p><code>&lt;element translate=&quot;yes|no&quot;&gt;</code>规定不应翻译某些元素。</p>\n<ul>\n<li><del>基本上浏览器都不支持。</del>测试当前新版本chrome是支持的。</li>\n<li>推荐使用<code>class=&quot;notranslate&quot;代替。</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"notranslate\"</span>&gt;</span>class=\"notranslate\"<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">notranslate</span>=<span class=\"string\">\"no\"</span>&gt;</span>notranslate<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">notranslate</span>=<span class=\"string\">\"yes\"</span>&gt;</span>translate<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 谷歌翻译的时候，最新版chrome仅最后一条为中文 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"draggable\"><a href=\"#draggable\" class=\"headerlink\" title=\"draggable\"></a>draggable</h2><p><code>&lt;element draggable=&quot;true|false|auto&quot;&gt;</code>元素是否可以被拖拽。</p>\n<ul>\n<li>Internet Explorer 9+, Firefox, Opera, Chrome, and Safari 支持 draggable 属性。</li>\n<li>链接和图像默认是可拖动的。</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/juh6528n/1/embedded/js,resources,html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<p>其中有几个要点：</p>\n<ul>\n<li>DataTransfer 对象：退拽对象用来传递的媒介，使用一般为Event.dataTransfer。</li>\n<li>draggable 属性：就是标签元素要设置draggable=true，否则不会有效果</li>\n<li>ondragstart 事件：当拖拽元素开始被拖拽的时候触发的事件，此事件作用在被拖曳元素上</li>\n<li>ondragenter 事件：当拖曳元素进入目标元素的时候触发的事件，此事件作用在目标元素上</li>\n<li>ondragover 事件：拖拽元素在目标元素上移动的时候触发的事件，此事件作用在目标元素上</li>\n<li>ondrop 事件：被拖拽的元素在目标元素上同时鼠标放开触发的事件，此事件作用在目标元素上</li>\n<li>ondragend 事件：当拖拽完成后触发的事件，此事件作用在被拖曳元素上</li>\n<li>Event.preventDefault() 方法：阻止默认的些事件方法等执行。在ondragover中一定要执行preventDefault()，否则ondrop事件不会被触发。另外，如果是从其他应用软件或是文件中拖东西进来，尤其是图片的时候，默认的动作是显示这个图片或是相关信息，并不是真的执行drop。此时需要用document的ondragover事件把它去掉。</li>\n<li>Event.effectAllowed 属性：就是拖拽的效果。</li>\n</ul>\n<p>参考链接<br><a href=\"http://www.zhangxinxu.com/wordpress/2011/02/html5-drag-drop-拖拽与拖放简介/\" target=\"_blank\" rel=\"noopener\">http://www.zhangxinxu.com/wordpress/2011/02/html5-drag-drop-拖拽与拖放简介/</a><br><a href=\"http://www.w3school.com.cn/tags/html_ref_standardattributes.asp\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tags/html_ref_standardattributes.asp</a></p>\n","more":"</p>\n<h2 id=\"accesskey\"><a href=\"#accesskey\" class=\"headerlink\" title=\"accesskey\"></a>accesskey</h2><p><code>&lt;element accesskey=&quot;character&quot;&gt;</code>,绑定快捷键用的，通过Alt + character 就能触发。</p>\n<ul>\n<li>几乎所有浏览器均 accesskey 属性，除了 Opera。</li>\n<li>支持 accesskey 属性：<code>&lt;a&gt;, &lt;area&gt;, &lt;button&gt;, &lt;input&gt;, &lt;label&gt;, &lt;legend&gt; 以及 &lt;textarea&gt;</code>。</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/fny1dv4p/1/embedded/html,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<h2 id=\"contenteditable与spellcheck\"><a href=\"#contenteditable与spellcheck\" class=\"headerlink\" title=\"contenteditable与spellcheck\"></a>contenteditable与spellcheck</h2><p><code>&lt;element contenteditable=&quot;true|false&quot;&gt;</code>是元素内容是否可编辑。<br><code>&lt;element spellcheck=&quot;true|false&quot;&gt;</code>是否对元素进行拼写和语法检查。</p>\n<ul>\n<li>所有主流浏览器都支持 contenteditable 属性。</li>\n<li>Internet Explorer 9 以及更早的版本不支持 spellcheck 属性。</li>\n<li><code>spellcheck</code>可检测的是<ul>\n<li>input 元素中的文本值（非密码）</li>\n<li><code>&lt;textarea&gt;</code>元素中的文本</li>\n<li>可编辑元素中的文本</li>\n</ul>\n</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/q6n4oywn/3/embedded/html,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<h2 id=\"translate\"><a href=\"#translate\" class=\"headerlink\" title=\"translate\"></a>translate</h2><p><code>&lt;element translate=&quot;yes|no&quot;&gt;</code>规定不应翻译某些元素。</p>\n<ul>\n<li><del>基本上浏览器都不支持。</del>测试当前新版本chrome是支持的。</li>\n<li>推荐使用<code>class=&quot;notranslate&quot;代替。</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"notranslate\"</span>&gt;</span>class=\"notranslate\"<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">notranslate</span>=<span class=\"string\">\"no\"</span>&gt;</span>notranslate<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">notranslate</span>=<span class=\"string\">\"yes\"</span>&gt;</span>translate<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 谷歌翻译的时候，最新版chrome仅最后一条为中文 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"draggable\"><a href=\"#draggable\" class=\"headerlink\" title=\"draggable\"></a>draggable</h2><p><code>&lt;element draggable=&quot;true|false|auto&quot;&gt;</code>元素是否可以被拖拽。</p>\n<ul>\n<li>Internet Explorer 9+, Firefox, Opera, Chrome, and Safari 支持 draggable 属性。</li>\n<li>链接和图像默认是可拖动的。</li>\n</ul>\n<iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yplian/juh6528n/1/embedded/js,resources,html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe>\n<p>其中有几个要点：</p>\n<ul>\n<li>DataTransfer 对象：退拽对象用来传递的媒介，使用一般为Event.dataTransfer。</li>\n<li>draggable 属性：就是标签元素要设置draggable=true，否则不会有效果</li>\n<li>ondragstart 事件：当拖拽元素开始被拖拽的时候触发的事件，此事件作用在被拖曳元素上</li>\n<li>ondragenter 事件：当拖曳元素进入目标元素的时候触发的事件，此事件作用在目标元素上</li>\n<li>ondragover 事件：拖拽元素在目标元素上移动的时候触发的事件，此事件作用在目标元素上</li>\n<li>ondrop 事件：被拖拽的元素在目标元素上同时鼠标放开触发的事件，此事件作用在目标元素上</li>\n<li>ondragend 事件：当拖拽完成后触发的事件，此事件作用在被拖曳元素上</li>\n<li>Event.preventDefault() 方法：阻止默认的些事件方法等执行。在ondragover中一定要执行preventDefault()，否则ondrop事件不会被触发。另外，如果是从其他应用软件或是文件中拖东西进来，尤其是图片的时候，默认的动作是显示这个图片或是相关信息，并不是真的执行drop。此时需要用document的ondragover事件把它去掉。</li>\n<li>Event.effectAllowed 属性：就是拖拽的效果。</li>\n</ul>\n<p>参考链接<br><a href=\"http://www.zhangxinxu.com/wordpress/2011/02/html5-drag-drop-拖拽与拖放简介/\" target=\"_blank\" rel=\"noopener\">http://www.zhangxinxu.com/wordpress/2011/02/html5-drag-drop-拖拽与拖放简介/</a><br><a href=\"http://www.w3school.com.cn/tags/html_ref_standardattributes.asp\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tags/html_ref_standardattributes.asp</a></p>","categories":[{"name":"html","path":"api/categories/html.json"}],"tags":[{"name":"html","path":"api/tags/html.json"},{"name":"拖拽","path":"api/tags/拖拽.json"}]}